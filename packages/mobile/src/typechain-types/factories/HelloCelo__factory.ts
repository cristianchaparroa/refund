/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { HelloCelo, HelloCeloInterface } from "../HelloCelo";

const _abi = [
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60c0604052600b60809081526a48656c6c6f2043656c6f2160a81b60a05260009061002a90826100dc565b5034801561003757600080fd5b5061019b565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061006757607f821691505b60208210810361008757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156100d757600081815260208120601f850160051c810160208610156100b45750805b601f850160051c820191505b818110156100d3578281556001016100c0565b5050505b505050565b81516001600160401b038111156100f5576100f561003d565b610109816101038454610053565b8461008d565b602080601f83116001811461013e57600084156101265750858301515b600019600386901b1c1916600185901b1785556100d3565b600085815260208120601f198616915b8281101561016d5788860151825594840194600190910190840161014e565b508582101561018b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61019a806101aa6000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063cfae321714610030575b600080fd5b61003861004e565b60405161004591906100dc565b60405180910390f35b6000805461005b9061012a565b80601f01602080910402602001604051908101604052809291908181526020018280546100879061012a565b80156100d45780601f106100a9576101008083540402835291602001916100d4565b820191906000526020600020905b8154815290600101906020018083116100b757829003601f168201915b505050505081565b600060208083528351808285015260005b81811015610109578581018301518582016040015282016100ed565b506000604082860101526040601f19601f8301168501019250505092915050565b600181811c9082168061013e57607f821691505b60208210810361015e57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220641b3b620fe606799a5b91d473116eed59659aee48292d419df252b1404a21ee64736f6c63430008140033";

type HelloCeloConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HelloCeloConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HelloCelo__factory extends ContractFactory {
  constructor(...args: HelloCeloConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      HelloCelo & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): HelloCelo__factory {
    return super.connect(runner) as HelloCelo__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HelloCeloInterface {
    return new Interface(_abi) as HelloCeloInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): HelloCelo {
    return new Contract(address, _abi, runner) as unknown as HelloCelo;
  }
}
